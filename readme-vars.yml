---

# project information
project_name: tt-rss
project_url: "https://tt-rss.org"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tt-rss-banner.png"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Stable Tiny Tiny RSS releases" }
  - { tag: "develop", desc: "Develop Tiny Tiny RSS releases from HEAD of their master branch" }

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "<path to data>", desc: "Where tt-rss should store it's config files and data." }
param_usage_include_ports: true
param_ports:
  - { external_port: "80", internal_port: "80", port_desc: "WebUI" }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: false
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  You must create a user and database for tt-rss to use in a mysql/mariadb or postgresql server. PostgreSQL is recommended, as InnoDB is required if using MySQL. A basic nginx configuration file can be found in /config/nginx/site-confs , edit the file to enable ssl (port 443 by default), set servername etc.. Self-signed keys are generated the first time you run the container and can be found in /config/keys , if needed, you can replace them with your own.

  **The default username and password after initial configuration is admin/password**

  ## Power users
  The container can configure itself using environment variables, the guard for this logic to run is if the variable `DB_TYPE` is set. The most common variables to set are a URL for the application and a database endpoint. IE:
  * -e DB_TYPE=mysql
  * -e DB_HOST=host
  * -e DB_USER=user
  * -e DB_NAME=name
  * -e DB_PASS=password
  * -e DB_PORT=3306
  * -e SELF_URL_PATH=http://localhost/

  Please note if you use this method you need to have an already initialized database endpoint. We do our best to ensure that anything in the config.php can be set via these environment variables. 

# changelog
changelogs:
  - { date: "06.08.19:", desc: "Add develop branch for edge releases." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "26.02.19:", desc: "Install app in container, add php-ldap, allow env vars to generate config, thanks Neraud and Fmstrat." }
  - { date: "22.02.19:", desc: "Rebasing to alpine 3.9." }
  - { date: "28.01.19:", desc: "Add pipeline logic and multi arch." }
  - { date: "21.08.18:", desc: "Rebase to alpine linux 3.8." }
  - { date: "08.01.18:", desc: "Rebase to alpine linux 3.7." }
  - { date: "19.07.17:", desc: "Use updated [repository](https://git.tt-rss.org/git/tt-rss) for initial install." }
  - { date: "25.05.17:", desc: "Rebase to alpine linux 3.6." }
  - { date: "23.02.17:", desc: "Rebase to alpine linux 3.5 and nginx." }
  - { date: "14.10.16:", desc: "Add version layer information." }
  - { date: "10.09.16:", desc: "Add layer badges to README." }
  - { date: "31.08.15:", desc: "Initial Release." }
